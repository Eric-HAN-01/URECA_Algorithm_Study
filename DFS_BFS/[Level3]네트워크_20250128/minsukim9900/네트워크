```java
import java.io.*;
import java.util.*;

class Solution {
    
    private static List<Integer>[] adj; 
    private static int[] p;
    
    public int solution(int n, int[][] computers) {
        
        adj = new ArrayList[n];
        
        for(int i = 0; i < n; i++) {
            adj[i] = new ArrayList<>();
        }
        
        p = new int[n];
        
        for(int i = 0; i < n; i++) {
            p[i] = i;
        }
        
        for (int i = 0; i < n; i++) {
            
            for(int j = 0; j < n; j++) {
                
                if(i == j) continue;
                
                if(computers[i][j] == 1) {
                    adj[i].add(j);
                }
                
            }
            
        }
        
        org(n);
        
        boolean[] visited = new boolean[n];
        int answer = 0;
        
        
        for(int i = 0; i < n; i++) {
            
            if(!visited[p[i]]) {
                visited[p[i]] = true;
                answer++;
            }
            
        }
        
        
        
        return answer;
    }
    
    private static void org(int n) {
        
        for(int i = 0; i < n; i++) {
            
            Queue<Integer> q = new ArrayDeque<>();
            q.add(i);
            
            while(!q.isEmpty()) {
                
                int curr = q.poll();
                int px = findP(curr);
                for(int w : adj[curr]) {
                    int py = findP(w);
                    if(px != py) {
                        union(px, py);
                        q.addAll(adj[w]);
                    }
                }
                
            }
            
        }
        
    }
    
    private static int findP(int x) {
        
        if(x != p[x]) {
            p[x] = findP(p[x]);
        }
        
        return p[x];
        
    }
    
    private static void union(int x, int y) {
        p[y] = p[x];
        
    }
    
}
```
